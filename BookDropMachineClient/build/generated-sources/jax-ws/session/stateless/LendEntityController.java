
package session.stateless;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LendEntityController", targetNamespace = "http://stateless.session/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LendEntityController {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<session.stateless.Lendws>
     * @throws MemberNotFoundException_Exception
     */
    @WebMethod(operationName = "ViewLendBooksWs")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ViewLendBooksWs", targetNamespace = "http://stateless.session/", className = "session.stateless.ViewLendBooksWs")
    @ResponseWrapper(localName = "ViewLendBooksWsResponse", targetNamespace = "http://stateless.session/", className = "session.stateless.ViewLendBooksWsResponse")
    @Action(input = "http://stateless.session/LendEntityController/ViewLendBooksWsRequest", output = "http://stateless.session/LendEntityController/ViewLendBooksWsResponse", fault = {
        @FaultAction(className = MemberNotFoundException_Exception.class, value = "http://stateless.session/LendEntityController/ViewLendBooksWs/Fault/MemberNotFoundException")
    })
    public List<Lendws> viewLendBooksWs(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws MemberNotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws LendNotFoundException_Exception
     * @throws MemberNotFoundException_Exception
     */
    @WebMethod(operationName = "ReturnLendBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReturnLendBook", targetNamespace = "http://stateless.session/", className = "session.stateless.ReturnLendBook")
    @ResponseWrapper(localName = "ReturnLendBookResponse", targetNamespace = "http://stateless.session/", className = "session.stateless.ReturnLendBookResponse")
    @Action(input = "http://stateless.session/LendEntityController/ReturnLendBookRequest", output = "http://stateless.session/LendEntityController/ReturnLendBookResponse", fault = {
        @FaultAction(className = MemberNotFoundException_Exception.class, value = "http://stateless.session/LendEntityController/ReturnLendBook/Fault/MemberNotFoundException"),
        @FaultAction(className = LendNotFoundException_Exception.class, value = "http://stateless.session/LendEntityController/ReturnLendBook/Fault/LendNotFoundException")
    })
    public boolean returnLendBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Long arg1)
        throws LendNotFoundException_Exception, MemberNotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.datatype.XMLGregorianCalendar
     * @throws BookOverDueException_Exception
     * @throws ReservedByOthersException_Exception
     * @throws LendNotFoundException_Exception
     * @throws FineNotPaidException_Exception
     * @throws MemberNotFoundException_Exception
     */
    @WebMethod(operationName = "ExtendLendBook")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ExtendLendBook", targetNamespace = "http://stateless.session/", className = "session.stateless.ExtendLendBook")
    @ResponseWrapper(localName = "ExtendLendBookResponse", targetNamespace = "http://stateless.session/", className = "session.stateless.ExtendLendBookResponse")
    @Action(input = "http://stateless.session/LendEntityController/ExtendLendBookRequest", output = "http://stateless.session/LendEntityController/ExtendLendBookResponse", fault = {
        @FaultAction(className = MemberNotFoundException_Exception.class, value = "http://stateless.session/LendEntityController/ExtendLendBook/Fault/MemberNotFoundException"),
        @FaultAction(className = LendNotFoundException_Exception.class, value = "http://stateless.session/LendEntityController/ExtendLendBook/Fault/LendNotFoundException"),
        @FaultAction(className = BookOverDueException_Exception.class, value = "http://stateless.session/LendEntityController/ExtendLendBook/Fault/BookOverDueException"),
        @FaultAction(className = FineNotPaidException_Exception.class, value = "http://stateless.session/LendEntityController/ExtendLendBook/Fault/FineNotPaidException"),
        @FaultAction(className = ReservedByOthersException_Exception.class, value = "http://stateless.session/LendEntityController/ExtendLendBook/Fault/ReservedByOthersException")
    })
    public XMLGregorianCalendar extendLendBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Long arg1)
        throws BookOverDueException_Exception, FineNotPaidException_Exception, LendNotFoundException_Exception, MemberNotFoundException_Exception, ReservedByOthersException_Exception
    ;

}
